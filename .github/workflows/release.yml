name: Clojure CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK x64
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        architecture: x64
        java-package: jdk
        java-version: 8

    - name: Convert .properties files
      run: |
        find loc -name '*.properties' -exec sh -c '
        for file do
          base=$(basename "$file")
          native2ascii "$file" "resources/tvt/a7/profedit/${base}"
        done' sh {} +

    - name: Install clojure tools
      uses: DeLaGuardo/setup-clojure@11.0
      with:
        lein: 2.10.0
    - name: Install dependencies
      run: lein deps

    - name: Gen proto
      run: lein protodeps generate

    - name: Uberjar
      run: lein uberjar

    - name: Set enviroment for github-release
      run: |
        echo RELEASE_TAG="$(grep -m1 'defproject' project.clj | awk '{print $3}' | tr -d '\"')" >> "$GITHUB_ENV"
        echo RELEASE_NAME="$GITHUB_WORKFLOW" >> "$GITHUB_ENV"

    - name: Set win32 archive name for github-release
      run: |
        echo WIN32_ZIP_NAME="win32_${{ env.RELEASE_TAG }}.zip" >> "$GITHUB_ENV"

    - name: Create Windows executable
      run: |
        tar -xzf .github/workflows/launch4j-3.13-linux-x64.tgz
        chmod +x launch4j/launch4j
        launch4j/launch4j .github/workflows/build.xml
        wget -q https://cdn.azul.com/zulu/bin/zulu8.54.0.21-ca-jre8.0.292-win_i686.zip
        unzip zulu8.54.0.21-ca-jre8.0.292-win_i686.zip -d /tmp/jre
        mkdir -p runtime
        mv /tmp/jre/*/* runtime
        mv target/profedit.exe ./
        zip -r ${{ env.WIN32_ZIP_NAME }} runtime skins profedit.exe

    - name: Create a Release
      continue-on-error: true
      id: release-1
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        gzip: false
        files: >
          ${{ env.WIN32_ZIP_NAME }}
          target/profedit.jar
        allow_override: true

    - name: Create a Release [retry 1]
      continue-on-error: true
      id: release-2
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        gzip: false
        files: >
          ${{ env.WIN32_ZIP_NAME }}
          target/profedit.jar
        allow_override: true
      if: steps.release-1.outcome == 'failure'

    - name: Create a Release [retry 2]
      continue-on-error: true
      id: release-3
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        gzip: false
        files: >
          ${{ env.WIN32_ZIP_NAME }}
          target/profedit.jar
        allow_override: true
      if: steps.release-2.outcome == 'failure'

    - name: Create a Release [retry 3]
      continue-on-error: false
      id: release-4
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        gzip: false
        files: >
          ${{ env.WIN32_ZIP_NAME }}
          target/profedit.jar
        allow_override: true
      if: steps.release-3.outcome == 'failure'
